apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-login-svc
  labels:
    app: api-login-svc
spec:
  replicas: 2
  selector:
    matchLabels:
      app: api-login-svc
  template:
    metadata:
      labels:
        app: api-login-svc
    spec:
      containers:
      - name: api-login-svc
        image: docker.io/your-username/api-login-svc:latest
        ports:
        - containerPort: 8080
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: "prod"
        - name: DB_HOST
          valueFrom:
            secretKeyRef:
              name: api-login-svc-secrets
              key: db-host
        - name: DB_PORT
          value: "5432"
        - name: DB_NAME
          valueFrom:
            secretKeyRef:
              name: api-login-svc-secrets
              key: db-name
        - name: DB_USERNAME
          valueFrom:
            secretKeyRef:
              name: api-login-svc-secrets
              key: db-username
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: api-login-svc-secrets
              key: db-password
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10

---
apiVersion: v1
kind: Service
metadata:
  name: api-login-svc-service
  labels:
    app: api-login-svc
spec:
  selector:
    app: api-login-svc
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8080
  type: ClusterIP

---
apiVersion: v1
kind: Secret
metadata:
  name: api-login-svc-secrets
type: Opaque
stringData:
  db-host: "your-db-host"
  db-name: "your-db-name" 
  db-username: "your-db-username"
  db-password: "your-db-password"
